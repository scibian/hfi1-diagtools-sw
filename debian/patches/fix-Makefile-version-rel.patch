Description: Correct version and release computation in Makefile
 Makefile uses git to determine the version and release. Use values
 from the spec file, instead.
Author: Brian T. Smith <bsmith@systemfabricworks.com>
Forwarded: no
Last-Update: <2017-12-14>
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Makefile
+++ b/Makefile
@@ -12,12 +12,19 @@
 
 DISTRO_NAME := $(shell if [ -e /etc/os-release ]; then sed -n '/^ID=/'p /etc/os-release | sed 's/ID=//g'; elif [ -n $(cat /etc/redhat-release | grep "6.7") ]; then  echo "rhel67"; fi)
 
+
+VERSION=$(shell grep Version: hfi1-diagtools-sw.spec | cut -f2 -d: | sed 's/ //')
+
+# VERSION and RELEASE come from spec file
 # The desired version number comes from the most recent tag starting with "v"
-VERSION := $(shell if [ -e .git ] ; then  git  describe --tags --abbrev=0 --match='v*' | sed -e 's/^v//' -e 's/-/_/'; else echo "version" ; fi)
+#VERSION := $(shell if [ -e .git ] ; then  git  describe --tags --abbrev=0 --match='v*' | sed -e 's/^v//' -e 's/-/_/'; else echo "version" ; fi)
 #
+
+RELEASE=$(shell grep Release: hfi1-diagtools-sw.spec | cut -f2 -d: | cut -f1 -d% | sed 's/ //')
+
 # The desired release number comes the git describe following the version which
 # is the number of commits since the version tag was planted suffixed by the g<commitid>
-RELEASE := $(shell if [ -e .git ] ; then git describe --tags --long --match='v*' | sed -e 's/v[0-9.]*-\(.*\)/\1/' -e 's/-/_/' | sed -e 's/_g.*$$//'; else echo "release" ; fi)
+#RELEASE := $(shell if [ -e .git ] ; then git describe --tags --long --match='v*' | sed -e 's/v[0-9.]*-\(.*\)/\1/' -e 's/-/_/' | sed -e 's/_g.*$$//'; else echo "release" ; fi)
 #
 
 # Concatenated version and release
@@ -35,7 +42,7 @@
 SUBDIRS:= testlib utils tests man scripts-enduser
 endif
 
-NOSHIP_SUBDIRS := hfidiags itp doc wfr_oem_tool
+NOSHIP_SUBDIRS := hfidiags itp doc
 ALL_DISTROLIB := -regex \".*/lib/readline/libedit2.*\" -prune -o -regex \".*/lib/readline/rhel67.*\" -prune -o
 RHEL_67LIB := -regex \".*/lib/readline/libedit2.*\" -prune -o -regex \".*/lib/readline/default.*\" -prune -o
 EXCLUDE_LIB := $(shell if [[ ${DISTRO_NAME} == "rhel67" ]]; then echo ${RHEL_67LIB}; elif [[ ${DISTRO_NAME} == "rhel" ||  ${DISTRO_NAME} == "sles" ]]; then echo ${ALL_DISTROLIB}; fi)
@@ -72,7 +79,6 @@
 
 clean:
 	$(MAKE) -C man $@
-	$(MAKE) -C wfr_oem_tool $@
 	rm -rf build/targ-* build/topdrivers build/drivers
 
 package-distclean:

Description: Correct version and release computation in Makefile
 Makefile uses git to determine the version and release. Use values
 from the spec file, instead.
 .
 hfi1-diagtools-sw (0.8-39-1ifs) UNRELEASED; urgency=medium
 .
    * Convert to quilt format. Corrected version.
Author: Brian T. Smith <bsmith@systemfabricworks.com>
Copyright: 2017 System Fabric Works, Inc. All Rights Reserved.
Forwarded: no
Last-Update: <2017-06-08>

---

--- a/Makefile
+++ b/Makefile
@@ -10,12 +10,19 @@
 RPM_NAME ?= hfi1-diagtools-sw
 BASEVERSION := 0.1
 
+
+VERSION=$(shell grep Version: hfi1-diagtools-sw.spec | cut -f2 -d: | sed 's/ //')
+
+# VERSION and RELEASE come from spec file
 # The desired version number comes from the most recent tag starting with "v"
-VERSION := $(shell if [ -e .git ] ; then  git  describe --tags --abbrev=0 --match='v*' | sed -e 's/^v//' -e 's/-/_/'; else echo "version" ; fi)
+#VERSION := $(shell if [ -e .git ] ; then  git  describe --tags --abbrev=0 --match='v*' | sed -e 's/^v//' -e 's/-/_/'; else echo "version" ; fi)
 #
+
+RELEASE=$(shell grep Release: hfi1-diagtools-sw.spec | cut -f2 -d: | cut -f1 -d% | sed 's/ //')
+
 # The desired release number comes the git describe following the version which
 # is the number of commits since the version tag was planted suffixed by the g<commitid>
-RELEASE := $(shell if [ -e .git ] ; then git describe --tags --long --match='v*' | sed -e 's/v[0-9.]*-\(.*\)/\1/' -e 's/-/_/' | sed -e 's/_g.*$$//'; else echo "release" ; fi)
+#RELEASE := $(shell if [ -e .git ] ; then git describe --tags --long --match='v*' | sed -e 's/v[0-9.]*-\(.*\)/\1/' -e 's/-/_/' | sed -e 's/_g.*$$//'; else echo "release" ; fi)
 #
 
 # Concatenated version and release
@@ -30,7 +37,7 @@
 SUBDIRS:= testlib utils tests man scripts-enduser
 endif
 
-NOSHIP_SUBDIRS := hfidiags itp doc wfr_oem_tool
+NOSHIP_SUBDIRS := hfidiags itp doc
 
 # set reasonable defaults
 export TOP := $(shell pwd)
@@ -63,13 +70,11 @@
 
 clean:
 	$(MAKE) -C man $@
-	$(MAKE) -C wfr_oem_tool $@
 	rm -rf build/targ-* build/topdrivers build/drivers
 	rm -f include/git_version.h
 
 package-distclean:
 	rm -rf build/rpms* build/*.spec cscope.* cscope
-	rm -rf $(RPM_NAME).spec
 	rm -rf $(RPM_NAME)-${VERSION_RELEASE}.tar.gz
 
 distclean: clean
